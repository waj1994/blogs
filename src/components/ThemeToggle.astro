<div>
  <button
    id="theme-toggle"
    type="button"
    class="theme-toggle relative rounded-[11px] block w-[40px] h-[22px] border-[1px] border-[#c2c2c4] dark:border-[#3c3f44] bg-[#8e96aa24] dark:bg-[#65758529]"
  >
    <span
      class="absolute w-[18px] h-[18px] top-[1px] left-[1px] rounded-full bg-white dark:bg-black shadow-[var(--shadow)] dark:translate-x-[18px]"
    >
      <span
        class="relative block w-[18px] h-[18px] overflow-hidden rounded-full"
      >
        <span
          id="theme-sun"
          class="sun icon"
        ></span>
        <span
          id="theme-moon"
          class="moon icon"
        ></span>
      </span>
    </span>
  </button>
</div>

<script is:inline>
  const storageKey = 'blog-theme'

  /**
   * isDark: true -> dark, false -> light
   */
  function isDarkStr(dark) {
    return dark ? 'dark' : 'light'
  }

  /**
   * 获取系统主题
   */
  function getSystemTheme() {
    return isDarkStr(window.matchMedia('(prefers-color-scheme: dark)').matches)
  }

  /**
   * 获取主题
   */
  function getCacheTheme() {
    return localStorage.getItem(storageKey) || getSystemTheme()
  }

  /**
   * 修改主题
   */
  function changeBtn(theme) {
    if (theme === 'light') {
      document.querySelector('#theme-sun')?.classList.add('active')
      document.querySelector('#theme-moon')?.classList.remove('active')
    } else {
      document.querySelector('#theme-sun')?.classList.remove('active')
      document.querySelector('#theme-moon')?.classList.add('active')
    }
    document.documentElement.setAttribute('class', theme)
    document.documentElement.setAttribute('data-theme', theme)
    localStorage.setItem(storageKey, theme)
  }

  /**
   * 初始化
   */
  function first() {
    const theme = getCacheTheme()
    changeBtn(theme)
  }
  first()

  /**
   * 按钮切换主题
   */
  function handleTheme() {
    const theme = document.documentElement.getAttribute('class')
    const newTheme = isDarkStr(!(theme === 'dark'))
    changeBtn(newTheme)
  }

  document
    .querySelector('#theme-toggle')
    ?.addEventListener('click', handleTheme)

  // 监听系统主题变化
  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', ({ matches }) => {
      changeBtn(isDarkStr(matches))
    })
</script>

<style scoped>
  .theme-toggle {
    --shadow: 0 1px 2px rgba(0, 0, 0, 0.04), 0 1px 2px rgba(0, 0, 0, 0.06);
  }

  .theme-toggle span {
    @apply transition duration-300 ease-in-out;
  }

  .sun {
    --icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' viewBox='0 0 24 24'%3E%3Ccircle cx='12' cy='12' r='4'/%3E%3Cpath d='M12 2v2M12 20v2M4.93 4.93l1.41 1.41M17.66 17.66l1.41 1.41M2 12h2M20 12h2M6.34 17.66l-1.41 1.41M19.07 4.93l-1.41 1.41'/%3E%3C/svg%3E");
  }

  .moon {
    --icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' stroke='currentColor' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' viewBox='0 0 24 24'%3E%3Cpath d='M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z'/%3E%3C/svg%3E");
  }

  .icon {
    mask: var(--icon) no-repeat;
    mask-size: 100% 100%;
    background-color: currentColor;
    position: absolute;
    top: 3px;
    left: 3px;
    width: 12px;
    height: 12px;
    color: #3c3c43c7;
    opacity: 0;
  }

  .active {
    @apply opacity-100 dark:text-gray-300;
  }
</style>
